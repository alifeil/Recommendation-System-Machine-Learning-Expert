# -*- coding: utf-8 -*-
"""Alifia Feiling Asmoro Siwi - Sistem Rekomendasi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JtF5Vz74MF1tlBMEW376iZsB0wCrwhNu

##**Sistem Rekomendasi: Rekomendasi Film untuk Pengguna**

**Oleh** : Alifia Feiling A.S

*Proyek Submission 2 - Machine Learning Terapan Dicoding*

#Pendahuluan

Pada proyek ini akan dibuat sistem rekomendasi untuk memberikan suatu saran rekomendasi kepada pengguna secara efektif dengan Collaborative Filtering.

#**1. Mempersiapkan Dataset**

**1.1. Kredensial akun kaggle**
"""

!pip install -q kaggle

from google.colab import files
uploaded = files.upload()

!mkdir -p ~/.kaggle

!cp kaggle.json ~/.kaggle/

!chmod 600 ~/.kaggle/kaggle.json

!ls ~/.kaggle

"""**1.2. Mengunduh dan Mempersiapkan Dataset**"""

# Mengunduh dataset menggunakan Kaggle CLI
!kaggle datasets download -d rounakbanik/the-movies-dataset

# Mengekstrak berkas zip ke direktori aktif saat ini
!mkdir film
!unzip -qq /content/the-movies-dataset.zip -d film
!ls film

"""#**2. Mengimpor pustaka/modul Python**"""

#untuk pengolahan data
import numpy as np
import pandas as pd

#untuk visualisasi data
import seaborn as sns
import matplotlib.pyplot as plt
import missingno as msno

#untuk pembuatan sistem rekomendasi
!pip install scikit-surprise
import surprise
from surprise import SVD
from surprise import accuracy
from surprise.model_selection import train_test_split
from surprise import Reader, Dataset
from surprise import KNNBasic

#untuk evaluasi sistem rekomendasi
from surprise import accuracy

"""# **3. Pemahaman Data (Data Understanding)**

## **3.1 Memuat data pada sebuah dataframe menggunakan pandas**

###**3.1.1 Dataset Rating**
"""

rating = pd.read_csv("/content/film/ratings_small.csv")

#pratinjau dataset
rating

"""### **3.1.2 Dataset Judul**"""

judul = pd.read_csv("/content/film/movies_metadata.csv")
#pratinjau dataset
judul = judul[['title']]
judul

"""###**3.1.3 Menggabungkan dataset rating dan judul**"""

datafilm = pd.concat([rating, judul], axis=1)
datafilm

"""#**3.2 Keterangan kolom pada dataset**"""

#memuat informasi dataframe
datafilm.info()

#menghitung jumlah data kosong pada setiap kolom
datafilm.isna().sum

#memuat deskripsi setiap kolom dataframe
datafilm.describe()

"""##**3.3 Visualisasi Data**"""

# visualisasi data kosong pada setiap kolom
sorted_null = msno.nullity_sort(datafilm, sort='ascending') 
figures = msno.matrix(sorted_null, color=(1, 0.43, 0.43))

#visualisasi korelasi antar kolom
plt.figure(figsize=(10,5))
sns.heatmap(datafilm.corr());
plt.title("Korelasi antar kolom")

#visualisasi data berdasarkan jumlah rating
ims = (10, 8)
fig, ax = plt.subplots(figsize=(10,5))
ax = sns.countplot(x="rating", data=rating)

"""# **4. Persiapan Data (Data Preparation)**

##**4.1 Kolom dataset untuk framework surprise**
"""

# Dataset yang akan dipakai untuk train test split dengan framework surprise
reader = Reader()
data = Dataset.load_from_df(rating[['userId', 'movieId', 'rating']], reader)

"""##**4.2 Melakukan pembagian data pada dataset dengan train_test_split**"""

# Train & Test
trainset, testset = train_test_split(data, test_size=0.20, random_state=50)

"""# **5. Pembuatan Model**

## **5.1 Pembuatan Model SVD**
"""

# Gunakan fungsi svd() yang sudah disediakan pada surprise
algo_svd = SVD()
prediction_mf = algo_svd.fit(trainset).test(testset)

# Prediksi
prediction_mf

"""##**5.2 Pembuatan Model KNN**"""

#pembuatan model knn
sim_options = {'name': 'pearson_baseline','shrinkage': 0}
algo = KNNBasic(sim_options=sim_options)
algo_knn = KNNBasic(k=75, sim_options=sim_options)
prediction_knn = algo_knn.fit(trainset).test(testset)

# Prediksi
prediction_knn

"""# **6. Pengujian Model**

##**6.1 Pengujian Rekomendasi Model Algo SVD**
"""

#pengujian rekomendasi model algo SVD
recom_svd = algo_svd.predict(uid=1,iid=5)
recom_svd

"""## **6.2 Pengujian Rekomendasi Model KNN**"""

# pegujian rekomendasi model KNN
recom_knn = algo_knn.predict(uid=30,iid=5655)
recom_knn

"""# **6. Evaluasi**

## **6.1 Evaluasi Model Algo SVD**
"""

accuracy.mae(prediction_mf)
accuracy.fcp(prediction_mf)
accuracy.rmse(prediction_mf)

"""## **6.2 Evaluasi Model KNN**"""

accuracy.mae(prediction_knn)
accuracy.fcp(prediction_knn)
accuracy.rmse(prediction_knn)

"""#**Penutupan**

Disimpulkan bahwa penggunaan metode collaborative filtering dapat memberikan suatu saran rekomendasi kepada pengguna secara efektif, baik menggunakan algoritma KNN maupun menggunakan matrix factorization.

### **Referensi**

1. https://scikit-learn.org/stable/modules/classes.html
2. https://plotly.com/python/
3. https://www.kaggle.com/faridrizqis/recommendersystem-colaborativefilter-surprise#Menggunakan-Metode-SVD
4. https://www.kaggle.com/ibtesama/getting-started-with-a-movie-recommendation-system#Content-Based-Filtering
"""